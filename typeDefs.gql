schema {
  query: Query
  mutation: Mutation
}

type Token {
    token: String!
}

type Rhetoric {
    _id: ID
    dateCreated: String!
    active: Boolean!
    slug: String!
    pro: Boolean!
    title: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: User
    approvalCommentary: String
    bulletPoints: [BulletPoint!]!
    resources: [Resource!]!
    opinions: [Opinion!]!
    edits: [Edit!]!
    originalDonation: Donation
    accruedVotes: Float!
}

type BulletPoint {
    _id: ID
    dateCreated: String!
    active: Boolean!
    slug: String!
    pro: Boolean!
    content: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: User
    approvalCommentary: String
    edits: [Edit!]!
    opinions: [Opinion!]!
    originalDonation: Donation
    accruedVotes: Float
}

type Resource {
    _id: ID
    dateCreated: String!
    active: Boolean!
    slug: String!
    pro: Boolean!
    title: String!
    media: String!
    link: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: User
    approvalCommentary: String
    edits: [Edit!]!
    opinions: [Opinion!]!
    originalDonation: Donation
    accruedVotes: Float
}

type Opinion {
    _id: ID
    dateCreated: String!
    createdBy: String!
    slug: String!
    pro: Boolean!
    opinion: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: String
    approvalCommentary: String
    documentID: ID!
    onModel: String!
    originalDonation: Donation!
}

type Edit {
    _id: ID
    dateCreated: String!
    createdBy: String!
    slug: String!
    pro: Boolean!
    oldDocumentID: ID!
    newDocumentID: ID!
    onModel: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: String
    approvalCommentary: String
    originalDonation: Donation!
}

type Donation {
    _id: ID
    dateCreated: String!
    slug: String!
    pro: Boolean!
    amount: Float!
    username: String!
    documentID: ID!
    onModel: String!
    active: Boolean!
    paid: Boolean!
    invoiceID: String!
    invoiceURL: String!
    votingDonation: Boolean
    upVote: Boolean
}

type Certificate {
    _id: ID
    dateCreated: String!
    active: Boolean!
    name: String!
    pro: Boolean!
    originalDonation: Donation!
}

type User {
    _id: ID
    dateCreated: String!
    username: String!@unique
    email: String!@unique
    emailValidated: Boolean!
    active: Boolean!
    password: String!
    allegiance: Boolean
    maximalist: Boolean
    admin: Boolean!
}

type Crypto {
    _id: ID
    ticker: String!
    valueUSD: Float!
}

type Query {
    getCurrentUser: User
    getRhetoricByMetaSlugAndSlug(pro: Boolean!, slug: String!): Rhetoric
    getAllApprovedAndActiveRhetoric(pro: Boolean!): [Rhetoric]
    getAmountDonatedSlugSpecific(pro: Boolean!, slug: String!): Float
    getAmountDonatedModelSpecific(pro: Boolean!, slug: String!, onModel: String!, documentID: ID!): Float
    getUnapprovedOpinions: [Opinion]
    getUnapprovedEdits: [Edit]
    getOpinionsModelSpecific(_id: String!, onModel: String!): [Opinion]

    getCryptoValue(ticker: String!): Float
    getDonation(pro: Boolean, slug: String): [Donation!]
}

type Mutation {
    setUserAllegiance(allegiance: String!): Token
    signinUser(email: String!, password: String!): Token
    signupUser(username: String!, email: String!, password: String!): Token
    submitOpinion(amount: String!, documentID: ID!, onModel: String!, opinion: String!): String
    approveOpinion(_id: ID!, approved: Boolean!, approvalCommentary: String!): Boolean
    submitVote(onModel: String!, documentID: ID!, amount: Float!, upVote: Boolean!): String

    submitEditBulletPoint(amount: String!, bulletPointID: ID!, bulletPointContent: String!): String
    submitEditResource(amount: String!, resourceID: ID!, resourceTitle: String!, resourcePath: String!, resourceMedia: String!): String
    addBulletPoint(slug: String!, pro: Boolean!, content: String!): BulletPoint
}