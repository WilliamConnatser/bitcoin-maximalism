union Donatable = BulletPoint | Resource | Opinion | Edit | Certificate
union Opinionable = BulletPoint | Edit | Resource | Rhetoric
union Editable = BulletPoint | Resource | Rhetoric

schema {
  query: Query,
  mutation: Mutation
}

type Token {
    token: String!
}

type Rhetoric {
    _id: ID,
    dateCreated: String!,
    slug: String!,
    pro: Boolean!,
    title: String!,
    bulletPoints: [BulletPoint!]!,
    resources: [Resource!]!,
    opinions: [Opinion!]!,
    approved: Boolean!,
    dateApproved: String,
    applicableDonation: Donation,
    edits: [Edit!]!,
    dateLastEdited: String!
}

type BulletPoint {
    _id: ID,
    dateCreated: String!,
    slug: String!,
    pro: Boolean!,
    content: String!,
    approved: Boolean!,
    dateApproved: String,
    applicableDonation: Donation,
    edits: [Edit!]!,
    dateLastEdited: String!,
    opinions: [Opinion!]!
}

type Resource {
    _id: ID,
    dateCreated: String!,
    slug: String,
    pro: Boolean!,
    title: String!,
    media: String!,
    link: String!,
    approved: Boolean!,
    dateApproved: String,
    applicableDonation: Donation,
    edits: [Edit!]!,
    dateLastEdited: String!,
    opinions: [Opinion!]!
}

type Opinion {
    _id: ID,
    dateCreated: String!,
    slug: String,
    pro: Boolean!,
    comment: String!,
    approved: Boolean!,
    dateApproved: String,
    applicableDonation: Donation,
    applicableDocument: Opinionable,
    onModel: String
}

type Edit {
    _id: ID,
    dateCreated: String!,
    slug: String!,
    pro: Boolean!,
    old: Editable!,
    new: Editable!,
    onModel: String!,
    approved: Boolean!,
    dateApproved: String,
    applicableDonation: Donation,
    opinions: [Opinion!]!
}

type Donation {
    _id: ID,
    dateCreated: String!,
    ticker: String!,
    amount: Float!,
    value: Float!,
    slug: String!,
    pro: Boolean!,
    applicableDocument: Donatable,
    onModel: String
}

type Certificate {
    _id: ID,
    dateCreated: String!,
    name: String!,
    pro: Boolean,
    applicableDonation: Donation
}

type User {
    _id: ID
    username: String!@unique
    email: String!@unique
    password: String!
    allegiance: Boolean
    maximalist: Boolean
    admin: Boolean!
}

type Query {
    getCurrentUser: User,
    getRhetoric(pro: Boolean, slug: String, approved: Boolean): [Rhetoric],
    getAllProtagonisticRhetoric(approved: Boolean): [Rhetoric],
    getAllAntagonisticRhetoric(approved: Boolean): [Rhetoric],
    getDonation(pro: Boolean, slug: String): [Donation],
    getSubType(type: String, pro: Boolean, slug: String): [Donatable]
}

type Mutation {
    setAllegiance(allegiance: String!): User
    addBulletPoint(slug: String!, pro: Boolean!, content: String!): BulletPoint
    signinUser(email: String!, password: String!): Token
    signupUser(username: String!, email: String!, password: String!): Token
}