union Donatable = BulletPoint | Resource | Opinion | Edit | Certificate | Rhetoric | User
union Opinionable = BulletPoint | Resource
union Editable = BulletPoint | Resource

schema {
  query: Query
  mutation: Mutation
}

type Token {
    token: String!
}

type Rhetoric {
    _id: ID
    dateCreated: String!
    active: Boolean!
    slug: String!
    pro: Boolean!
    title: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: User
    approvalCommentary: String
    bulletPoints: [BulletPoint!]!
    resources: [Resource!]!
    opinions: [Opinion!]!
    edits: [Edit!]!
    donations: [Donation!]!
}

type BulletPoint {
    _id: ID
    dateCreated: String!
    active: Boolean!
    slug: String!
    pro: Boolean!
    content: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: User
    approvalCommentary: String
    edits: [Edit!]!
    opinions: [Opinion!]!
    donations: [Donation!]!
}

type Resource {
    _id: ID
    dateCreated: String!
    active: Boolean!
    slug: String!
    pro: Boolean!
    title: String!
    media: String!
    link: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: User
    approvalCommentary: String
    edits: [Edit!]!
    opinions: [Opinion!]!
    donations: [Donation!]!
}

type Opinion {
    _id: ID
    dateCreated: String!
    slug: String!
    pro: Boolean!
    comment: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: User
    approvalCommentary: String
    document: Opinionable
    onModel: String
    donations: [Donation!]!
}

type Edit {
    _id: ID
    dateCreated: String!
    slug: String!
    pro: Boolean!
    old: Editable!
    new: Editable!
    onModel: String!
    approved: Boolean!
    dateApproved: String
    approvedBy: User
    approvalCommentary: String
    opinions: [Opinion!]!
    donations: [Donation!]!
}

type Donation {
    _id: ID
    dateCreated: String!
    slug: String!
    pro: Boolean!
    ticker: String!
    amount: Float!
    username: String!
    document: Donatable!
    onModel: String!
    active: Boolean!
    paid: Boolean!
    invoice: String!
}

type Certificate {
    _id: ID
    dateCreated: String!
    active: Boolean!
    name: String!
    pro: Boolean!
    donations: [Donation!]!
}

type User {
    _id: ID
    dateCreated: String!
    username: String!@unique
    email: String!@unique
    emailValidated: Boolean!
    active: Boolean!
    password: String!
    allegiance: Boolean
    maximalist: Boolean
    admin: Boolean!
    donations: [Donation!]!
}

type Crypto {
    _id: ID
    ticker: String!
    valueUSD: Float!
}

type Query {
    getCurrentUser: User
    getRhetoricByMetaSlugAndSlug(pro: Boolean!, slug: String!): Rhetoric
    getAllApprovedAndActiveProtagonisticRhetoric: [Rhetoric]
    getAllApprovedAndActiveAntagonisticRhetoric: [Rhetoric]

    getAmountDonatedSlugSpecific(pro: Boolean!, slug: String!): Float
    getAmountDonatedModelSpecific(pro: Boolean!, slug: String!, onModel: String!): Float

    getDonation(pro: Boolean, slug: String): [Donation!]
    getModel(pro: Boolean!, slug: String!, model: String!): [Donatable]
}

type Mutation {
    setAllegiance(allegiance: String!): User
    addBulletPoint(slug: String!, pro: Boolean!, content: String!): BulletPoint
    signinUser(email: String!, password: String!): Token
    signupUser(username: String!, email: String!, password: String!): Token
}